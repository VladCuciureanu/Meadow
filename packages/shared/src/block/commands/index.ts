import { z } from "zod";
import {
  BlockType,
  ListStyleType,
  TodoState,
  BlockColor,
  TextStyle,
  FontStyle,
  AlignmentStyle,
  CardType,
  CardFontStyle,
  CardBackgroundColorKey,
  LineStyle,
  CodeLanguage,
  ImageSizeStyle,
  ImageFillStyle,
  LayoutStyle,
} from "..";

export const MutableBlockFields = z.object({
  type: z.nativeEnum(BlockType),
  indentationLevel: z.number(),
  listStyle: z.object({
    type: z.nativeEnum(ListStyleType),
    ordinal: z.number().optional(),
    state: z.nativeEnum(TodoState),
  }),
  hasBlockDecoration: z.boolean(),
  hasFocusDecoration: z.boolean(),
  color: z.nativeEnum(BlockColor),
  style: z.object({
    textStyle: z.nativeEnum(TextStyle),
    fontStyle: z.nativeEnum(FontStyle),
    alignmentStyle: z.nativeEnum(AlignmentStyle),
    cardStyle: z.object({
      type: z.nativeEnum(CardType),
      fontStyle: z.nativeEnum(CardFontStyle).optional(),
      backgroundColorKey: z.nativeEnum(CardBackgroundColorKey).optional(),
      backgroundColor: z.string().optional(),
      backgroundUrl: z.string().url().optional(),
      isLightColor: z.string(),
    }),
    coverImage: z.object({
      enabled: z.boolean(),
      url: z.string().url().optional(),
      aspectRatio: z.number().optional(),
      attribution: z.string().optional(),
      primaryColor: z.string().optional(),
      imageWidth: z.number().optional(),
      hasTransparency: z.boolean().optional(),
    }),
  }),
  parentBlockId: z.string().uuid(),
  lineStyle: z.nativeEnum(LineStyle),
  code: z.string(),
  language: z.nativeEnum(CodeLanguage),
  url: z.string().url().optional(),
  previewUrl: z.string().url().optional(),
  filename: z.string().optional(),
  previewImageStyle: z.object({
    sizeStyle: z.nativeEnum(ImageSizeStyle),
    fillStyle: z.nativeEnum(ImageFillStyle),
  }),
  layoutStyle: z.nativeEnum(LayoutStyle),
  originalUrl: z.string().url().optional(),
  imageUrl: z.string().url().optional(),
  title: z.string().optional(),
  pageDescription: z.string().optional(),
});
